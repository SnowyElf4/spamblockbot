from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.dispatcher import FSMContext

#Токен бота с БотФазера
API_TOKEN = '7992716170:AAFIKgOEZhR4Nw1-WWnCb1OSk9ptVPqJWEY'
chat_id = '5189923704'

bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

class UserState(StatesGroup):
    name = State()

@dp.message_handler(commands='start')
async def send_hello(message: types.Message):
    markup = types.InlineKeyboardMarkup()
    bt1 = types.InlineKeyboardButton("Лолзянка", url=lolz)
    bt2 = types.InlineKeyboardButton("Спам-Блок", callback_data='spam-block')
    bt3 = types.InlineKeyboardButton("Написать сообщение", callback_data='sms')
    markup.add(bt1,bt2)
    markup.add(bt3)
    await message.reply("<b>Привет! Если у тебя <u>Спам-Блок</u>. \n\n- - Нажимай на кнопки ниже, и свяжись с нужным тебе человеком.</b>",
                 parse_mode='html',
                 reply_markup=markup)

@dp.callback_query_handler(lambda call: call.data == 'sms', state='*')
async def start_message(call: types.CallbackQuery, state: FSMContext):
    cancel_button = types.InlineKeyboardButton('Отмена', callback_data='cancel')
    markup = types.InlineKeyboardMarkup().add(cancel_button)
    await bot.send_message(chat_id=call.message.chat.id, text='<b>Напиши сообщение которое ты желаешь отправить:</b>', parse_mode='html', reply_markup=markup)
    await UserState.name.set()

@dp.callback_query_handler(lambda call: call.data == 'cancel', state=UserState.name)
async def cancel_message(call: types.CallbackQuery, state: FSMContext):
    await bot.send_message(chat_id=call.message.chat.id, text='Отправка сообщения отменена.', parse_mode='html')
    await state.finish()

@dp.callback_query_handler(lambda call: call.data == 'spam-block', state='*')
async def report_spam(call: types.CallbackQuery):
    usname = call.from_user.username
    await bot.send_message(chat_id=chat_id, text="У пользователя"+ " @" + usname + " <u>спам-блок!</u>", parse_mode='html')
    await bot.send_message(chat_id=call.message.chat.id,
                            text="Я дал знать о твоём <u>спам-блоке</u>! \n\n- -Так же ты можешь дать знать что ты конкретно хочешь заранее, написав сообщение благодоря кнопке в меню.",
                            parse_mode='html')

@dp.message_handler(state=UserState.name)
async def get_username(message: types.Message, state: FSMContext):
    if message.text == 'Отмена':
        await bot.send_message(chat_id=message.chat.id, text='Отменено.', parse_mode='html')
        await state.finish()
    else:
        usname = message.from_user.username
        await bot.send_message(chat_id=chat_id,
                         text=f"Сообщение пользователя: @{usname} \n\n- - {message.text}",
                         parse_mode='html')
        await state.finish()
        await bot.send_message(chat_id=message.chat.id,
                           text='<b>Сообщение отправлено.</b>', parse_mode='html')


print('Бот запущен!')
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
